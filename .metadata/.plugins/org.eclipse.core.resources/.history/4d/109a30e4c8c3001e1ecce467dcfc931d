package dealership.negotiation.service;

import java.util.NoSuchElementException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import dealership.negotiation.controller.model.DealershipData;
import dealership.negotiation.dao.DealershipDao;
import dealership.negotiation.entity.Dealership;

@Service
public class NegotiationService {
	
	@Autowired DealershipDao dealershipDao;
	
	@Transactional(readOnly = false)
	public DealershipData saveDealership(DealershipData dealershipData) {
		Dealership dealership = dealershipData.toDealership();
		Dealership dbDealership = dealershipDao.save(dealership);
		
		return new DealershipData(dbDealership);
	}
	
	@Transactional(readOnly = true)
	public DealershipData retrieveDealershipById(Long dealershipId) {
		Dealership dealership = findDealershipById(dealershipId);
		return new DealershipData(dealership);
	}

	private Dealership findDealershipById(Long dealershipId) {
		return dealershipDao.findById(dealershipId).orElseThrow(
				() -> new NoSuchElementException("Dealership with ID" + dealershipId + " was not found."));
	}

}


//When a method returns an optional, must do an OrElseThrow